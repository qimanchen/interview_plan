global
        log /dev/log    local0 #日志输出配置，所有日志都记录在本机, 由 local0 设备输出，日志文件为 /var/log/syslog
        log /dev/log    local1 notice #全局日志配置，指定使用 syslog 服务中的 local1 日志设备，记录日志的等级为 info 级别, 日志文件为 /var/log/haproxy.log
        chroot /var/lib/haproxy    #HAProxy 的工作目录
        user haproxy    #设置运行 HAProxy 进程的用户和组
        group haproxy
        daemon #设置 HAProxy 已守护进程的方式运行

defaults
        log     global    #使用 global 的日志配置
        mode    http    #设置 HAProxy 实例默认运行模式，有 tcp、http、health 三个值可选。tcp 是第四层，http 是第七层，health 是健康监测(基本不再使用)
        option  httplog #启用日志记录 HTTP 请求，默认 HAProxy 日志不会记录 HTTP 请求
        option  dontlognull #启动这个配置参数，日志中将不会记录空连接。如果该服务上游没有其他的负载均衡器，建议不适用此参数
        contimeout 5000 #设置成功连接到一台服务器的最长等待时间，默认单位是毫秒，新版本的haproxy使用timeout connect替代，该参数向后兼容
        clitimeout 50000 #设置连接客户端发送数据时的成功连接最长等待时间，默认单位是毫秒，新版本haproxy使用timeout client替代。该参数向后兼容
        srvtimeout 50000 #设置服务器端回应客户度数据发送的最长等待时间，默认单位是毫秒，新版本haproxy使用timeout server替代。该参数向后兼容
        errorfile 400 /etc/haproxy/errors/400.http #指定部分错误状态码的html文件
        errorfile 403 /etc/haproxy/errors/403.http
        errorfile 408 /etc/haproxy/errors/408.http
        errorfile 500 /etc/haproxy/errors/500.http
        errorfile 502 /etc/haproxy/errors/502.http
        errorfile 503 /etc/haproxy/errors/503.http
        errorfile 504 /etc/haproxy/errors/504.http

#下面部分为添加的部分
frontend shiyanlou #定义一个名为 shiyanlou 的前端部分
    bind 0.0.0.0:80 #定义前端部分监听地址端口
    mode http #同上
    option httplog #同上
    option forwardfor #使用后端可以获取到客户端的真实 IP
    option httpclose #客户端与服务器完成一次请求后，HAProxy 将主动关闭此 TCP 链接，对性能有一定的帮助。
    log global #使用全局的日志配置
    default_backend www #指定默认的后端服务器池

backend www #定义一个名为 www 的后端部分, 对应 www.shiyanlou.com 站点
    mode http #同上
    balance source #设置调度算法，可以是以下几种算法之一：roundrobin,static-rr,source,leastconn,uri,uri_param,hdr(<name>)
    cookie SERVERID #允许向cookie插入SERVERID，每台服务器的SERVERID可在下面使用cookie关键字定义，此处可选
    option httpchk GET /index.html #开启对后端服务器的健康检测，通过 GET /index.html 的方式来判断后端服务器的健康情况
    server nginx-server-1 192.168.0.4:80 cookie server-1 weight 1 check inter 2000 rise 3 fall 3
    #server 关键字定义一个或一组后端真实服务器使用格式如下：
    #server <name> <ip>[:port] [param*]
    #param 是为后端服务器设定的一系列参数，这里列举几个常用的
    # check：表示启用对后端服务器健康检查
    # inter 设置健康检查的时间间隔
    # rise 检测正常多少次后可被认为后端服务器是可用的
    # fall 检测失败多少次以后可被认为是不可用的
    # weight 分发请求的权重
    # backup 设置为后端真实服务器的备份服务器，只有其他服务器都不可用时，才会启动此服务器

backend static #定义一个名为 static 的后端部分, 对应 static.shiyanlou.com 站点
    mode http #同上
    balance source #设置调度算法，可以是以下几种算法之一：roundrobin,static-rr,source,leastconn,uri,uri_param,hdr(<name>)
    cookie SERVERID #允许向cookie插入SERVERID，每台服务器的SERVERID可在下面使用cookie关键字定义，此处可选
    option httpchk GET /index.html #开启对后端服务器的健康检测，通过 GET /index.html 的方式来判断后端服务器的健康情况
    server nginx-server-2 192.168.0.5:80 cookie server-2 weight 1 check inter 2000 rise 3 fall 3

backend api #定义一个名为 api 的后端部分, 对应 api.shiyanlou.com 站点
    mode http #同上
    balance source #设置调度算法，可以是以下几种算法之一：roundrobin,static-rr,source,leastconn,uri,uri_param,hdr(<name>)
    cookie SERVERID #允许向cookie插入SERVERID，每台服务器的SERVERID可在下面使用cookie关键字定义，此处可选
    option httpchk GET /index.html #开启对后端服务器的健康检测，通过 GET /index.html 的方式来判断后端服务器的健康情况
    server nginx-server-3 192.168.0.6:80 cookie server-1 weight 1 check inter 2000 rise 3 fall 3

listen HAProxy_status    #定义了一个名为 HAProxy_status 的监控实例，也相当于定义了 HAProxy 的监控统计页面
    bind 0.0.0.0:3000 #绑定监控页面的地址，端口
    stats uri /haproxy-status #设置 HAProxy 监控页面的 url 地址
    stats refresh 30s #设置监控页面自动刷新时间
    stats realm welcome \login HAProxy #设置监控页面登录时的文本提示信息
    stats auth admin:admin    #设置登录监控页面的用户名和密码
    stats hide-version    #隐藏监控统计页面的 HAProxy 版本信息
    stats admin if TRUE  #设置此选项，可以在监控页面上手动启动或禁用后端真实服务器，仅在 HAProxy 1.4.9 以后版本有效