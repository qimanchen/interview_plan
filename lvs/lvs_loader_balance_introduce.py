# LVS负载技术

# 以软件实现的负载均衡的方式
"""
1. 基于应用层负载均衡

2. 基于IP层负载均衡
"""

# 基于应用层负载均衡
"""
多台服务器通过高速的互联网络连接成一个集群系统，在前端有一个基于应用层的负载调度器

当用户访问请求到达调度器时，请求会提交给做负载均衡调度的应用程序，分析请求，
根据各个服务器的负载情况，选出一台服务器，重写请求并向选出的服务器访问，取得结果后，再返回给用户。
"""
# Nginx 和 Apache 的Rewrite模块
# 缺点
"""
系统处理开销较大，致使系统的伸缩性有限。

基于应用层的负载均衡调度器对于不同的应用，需要写不同的调度器。
"""

# 基于IP层负载均衡
"""
用户通过虚拟 IP 地址（Virtual IP Address）访问服务时，访问请求的报文会到达负载调度器，由它进行负载均衡调度，从一组真实服务器选出一个，
将报文处理并转发给选定服务器的地址。实服务器的回应报文经过负载调度器时，将报文的源地址和源端口改为 Virtual IP Address 和相应的端口，再把报文发给用户。
"""

# IP的负载技术的三种模式
"""
通过 NAT 实现虚拟服务器（VS/NAT）
通过 IP 隧道实现虚拟服务器（VS/TUN）
通过直接路由实现虚拟服务器（VS/DR）
"""

# IP负载的8中调度算法
"""
1. 轮询

2. 加权轮询

3. 最少连接

4. 加权最小连接

5. 基于局部最少连接
目前主要用于Cache集群系统。该算法根据请求的目标 IP 地址找出该目标 IP 地址最近使用的服务器，若该服务器 是可用的且没有超载，
将请求发送到该服务器；若服务器不存在，或者该服务器超载且有服务器处于一半的工作负载，
则用"最少链接"的原则选出一个可用的服务 器，将请求发送到该服务器

6. 带复制的基于局部最少连接
目前主要用于 Cache 集群系统。它与 LBLC 算法的不同之处是它要维护从一个 目标 IP 地址到一组服务器的映射，
而 LBLC 算法维护从一个目标 IP 地址到一台服务器的映射

7. 目标地址HASH

8. 源地址HASH

"""

# VS/NAT 实现虚拟服务器
"""
NAT：当内部网络中的主机要访问 Internet 或被 Internet 访问时，就需要采用网络地址转换（Network Address Translation, 以下简称 NAT），将内部地址转化为 Internet 上可用的外部地址。

NAT工作原理：
报文头（目标地址、源地址和端口等）被正确改写后，客户相信 它们连接一个 IP 地址，而不同 IP 地址的服务器组也认为它们是与客户直接相连的。
NAT 方法将不同 IP 地址的并行网络服务变成在一个 IP 地址上的一个虚拟服务。

# 主要步骤
1. 客户端通过 Internet 向服务器发起请求，而请求的 IP 地址指向的是调度器上对外公布的 IP 地址 -- VIP

2. 请求报文到达调度器（Load Balancer），调度器根据调度算法从一组真实的服务器（RIP)
客户端的请求报文中的目标地址（Load Balancer 的 VIP）和端口通过 iptables 的 NAT 改写为选定服务器的 IP 地址和服务的端口。
最后将修改后的报文发送给选出的服务器。
调度器在连接Hash 表中记录这个连接；当这个连接的下一个报文到达时，从连接 Hash 表中可以得到原选定服务器的地址和端口，

3. Real Server 接收到报文之后，作出了相应的处理，然后将响应的报文发送给 Load Balancer；

4. Load Balancer 接收到响应的报文时，将报文的源地址和源端口改为 Virtual IP Address和相应的端口，再把报文发给用户。
"""
# 特点
"""
1. 集群节点，也就是 Real Server 与 Load Balacer 必须在同一个 IP 网络中
2. Load Balancer 位于 Real Server 与客户端之间，处理进出的所有通信
3. RIP 通常是私有地址，仅用于各个集群节点之间的通信。
4. Real Server 的网关必须指向 Load Balancer
5. 支持端口映射：也就是Real Server 的端口可以自己设定，没有必须是与 Load Balancer 一样
"""
# 缺点
"""
但是 Load Balancer 将可能成为集群的瓶颈。因为所有的出入报文都需要 Load Balancer 处理
"""

# VS/DR实现虚拟服务器
"""
负载调度器中只负责调度请求，而服务器直接将响应返回给客户

1. 客户端通过 Internet 向服务器发起请求，而请求的 IP 地址指向的是调度器上对外公布的 IP 地址；

2. 请求报文到达调度器（Load Balancer），调度器根据各个服务器的负载情况，动态地选择一台服务器，
不修改也不封装 IP 报文，而是将数据帧的 MAC 地址改为选出服务器的 MAC 地址，
再将修改后 的数据帧在与服务器组的局域网上发送。因为数据帧的 MAC 地址是选出的服务器，所以服务器肯定可以收到这个数据帧；

3. Real Server 接收到报文之后，发现报文的目标地址 VIP 是在本地的网络设备上，服务器处理这个报文，然后根据路由表将响应报文直接返回给客户。

根据缺省的 TCP/IP 协议栈处理，请求报文的目标地址为 VIP，响应报文的源地址肯定也为VIP，所以响应报文不需要做任何修改，可以直接返回给客户，
"""
# 特点
"""
1. 集群节点，也就是 Real Server 与 Load Balacer 必须在同一个物理网络中
2. RIP 通常是私有地址，也可以是公网地址，以便于远程管理与监控。
3. Load Balancer 仅仅负责处理入站的请求，Real Server 将直接响应客户端
4. Real Server 的网关不能指向 Load Balancer
5. 不支持端口映射：也就是 Real Server 的端口必须是与 Load Balancer 对外服务的一样
"""

# VS/TUN实现虚拟服务
"""
IP 隧道（IP tunneling）是将一个 IP 报文封装在另一个 IP 报文的技术，
这可以使得目标为一个 IP 地址的数据报文能被封装和转发到另一个 IP 地址。
IP隧道技术亦称为 IP 封装技术（IP encapsulation）。

连接调度和管理与 VS/NAT 中的一样，只是它的报文转发方法不同。

1. 调度器根据各个服务器的负载情况，动态地选择一台服务器， 将请求报文封装在另一个 IP 报文中，
再将封装后的 IP 报文转发给选出的服务器；

2. 服务器收到报文后，先将报文解封获得原来目标地址为 VIP的报文，服务器发现VIP地址被配置在本地的 IP隧道设备上，
所以就处理这个请求，然后根据路由表将响应报文直接返回给客户。
"""
# 特点
"""
1. 集群节点，也就是 Real Server 与 Load Balacer 可以跨越公网
2. RIP 必须是公网地址
3. Load Balancer 仅仅负责处理入站的请求，Real Server 将直接响应客户端
4. Real Server 的网关不能指向 Load Balancer
5. 不支持端口映射：也就是 Real Server 的端口必须是与 Load Balancer 对外服务的一样
"""
